-module(verl__meta).
-define(MOD,verl).

-serl_info(
   [{exports,[{specials,
	       [%% pseudo forms
		{'__bof',{{?MOD,'__sp_bof'}}},
		{'__eof',{{?MOD,'__sp_eof'}}},
		%% ast specials 
		{'__float',{{?MOD,'__sp_float'}}}, 
		{'__integer',{{?MOD,'__sp_integer'}}}, 
		{'__string',{{?MOD,'__sp_string'}}}, 
		{'__atom',{{?MOD,'__sp_atom'}}}, 
		{'__var',{{?MOD,'__sp_var'}}},
		{'__block',{{?MOD,'__sp_block'}}},
		{'__brace',{{?MOD,'__sp_brace'}}}, 
		{'__call',{{?MOD,'__sp_call'}}},
		{'__quote',{{?MOD,'__sp_quote'}}},
		{'__bquote',{{?MOD,'__sp_bquote'}}},

		%% extensions
		{'defm',{{?MOD,'__sp_defm'}}},
		{'eval-binding',{{?MOD,'__sp_eval-binding'}}},
		{'let',{{?MOD,'__sp_let'}}}, 

		%% 4.1
		{'module',{{?MOD,'__sp_module'}}},
		{'export',{{?MOD,'__sp_export'}}},
		{'import',{{?MOD,'__sp_import'}}},
		{'record',{{?MOD,'__sp_record'}}},
		{'def',{{?MOD,'__sp_def'}}}, 

		%%       {'=',{{?MOD,'__sp_='}}},

		{'tuple',{{?MOD,'__sp_tuple'}}}, 
		{'cons',{{?MOD,'__sp_cons'}}},
		{'nil',{{?MOD,'__sp_nil'}}}, 

		{'op',{{?MOD,'__sp_op'}}},

		{'+',{{?MOD,'__sp_+'}}},
		{'-',{{?MOD,'__sp_-'}}},
		{'*',{{?MOD,'__sp_*'}}},
		{'/',{{?MOD,'__sp_/'}}},	 
		{'rem',{{?MOD,'__sp_rem'}}},

		{'++',{{?MOD,'__sp_++'}}},

		{'==',{{?MOD,'__sp_=='}}},
		{'<',{{?MOD,'__sp_<'}}},
		{'>',{{?MOD,'__sp_>'}}},
		{'>=',{{?MOD,'__sp_>='}}},
		{'=<',{{?MOD,'__sp_=<'}}},


		{'and',{{?MOD,'__sp_and'}}},
		{'or',{{?MOD,'__sp_or'}}},
		{'andalso',{{?MOD,'__sp_andalso'}}},
		{'orelse',{{?MOD,'__sp_orelse'}}},
		{'not',{{?MOD,'__sp_not'}}},

		%%       {'rec',{{?MOD,'__sp_rec'}}},
		%%       {'rec-index',{{?MOD,'__sp_rec-index'}}},
		%%       {'rec-val',{{?MOD,'__sp_rec-val'}}},

		{'catch',{{?MOD,'__sp_catch'}}},

		{'if',{{?MOD,'__sp_if'}}},
		{'case',{{?MOD,'__sp_case'}}},
		{'try',{{?MOD,'__sp_try'}}},

		{'fn',{{?MOD,'__sp_fn'}}},
		{'do',{{?MOD,'__sp_begin'}}},
		{'begin',{{?MOD,'__sp_begin'}}}

	       ]},
	      {macros,
	       [{'ls',{{?MOD,'__mac_ls'}}},
		{'>>',{{?MOD,'__mac_>>'}}},
		{'fmt',{{fmt,'$mac-fmt'}}},
		{'fmts',{{fmt,'$mac-fmts'}}},

		{'float',{{?MOD,'__mac_float'}}},
		{'integer',{{?MOD,'__mac_integer'}}},
		{'string',{{?MOD,'__mac_string'}}},
		{'atom',{{?MOD,'__mac_atom'}}},
		{'var',{{?MOD,'__mac_var'}}},
		{'block',{{?MOD,'__mac_block'}}},
		{'paren',{{?MOD,'__mac_paren'}}},
		{'brace',{{?MOD,'__mac_brace'}}},

		{'floats',{{?MOD,'__mac_floats'}}},
		{'integers',{{?MOD,'__mac_integers'}}},
		{'strings',{{?MOD,'__mac_strings'}}},
		{'atoms',{{?MOD,'__mac_atoms'}}},
		{'vars',{{?MOD,'__mac_vars'}}},
		{'blocks',{{?MOD,'__mac_blocks'}}},
		{'parens',{{?MOD,'__mac_parens'}}},
		{'braces',{{?MOD,'__mac_braces'}}}

	       ]},
	      {rmacros,
	       [{'a',{{?MOD,'__rm_a'}}},
		{'c',{{?MOD,'__rm_c'}}},
		{'s',{{?MOD,'__rm_s'}}}
	       ]},
	      {functions,
	       [{'cat',{{lists,append}}},
		{'format',{{io,format}}},
		{'send',{{erlang,'send'}}},
		
		%%bifs
		{'abs',{{erlang,'abs'}}},
		{'adler32',{{erlang,'adler32'}}},
		{'adler32-combine',{{erlang,'adler32_combine'}}},
		{'apply',{{erlang,'apply'}}},
		{'atom-to-list',{{erlang,'atom_to_list'}}},
		{'binary-to-list',{{erlang,'binary_to_list'}}},
		{'bitstring-to-list',{{erlang,'bitstring_to_list'}}},
		{'binary-to-term',{{erlang,'binary_to_term'}}},
		{'bit-size',{{erlang,'bit_size'}}},
		{'byte-size',{{erlang,'byte_size'}}},
		{'check-process-code',{{erlang,'check_process_code'}}},
		{'concat-binary',{{erlang,'concat_binary'}}},
		{'crc32',{{erlang,'crc32'}}},
		{'crc32-combine',{{erlang,'crc32_combine'}}},
		{'date',{{erlang,'date'}}},
		{'delete-module',{{erlang,'delete_module'}}},
		{'disconnect-node',{{erlang,'disconnect_node'}}},
		{'element',{{erlang,'element'}}},
		{'erase',{{erlang,'erase'}}},
		{'exit',{{erlang,'exit'}}},
		{'float',{{erlang,'float'}}},
		{'float-to-list',{{erlang,'float_to_list'}}},
		{'garbage-collect',{{erlang,'garbage_collect'}}},
		{'get',{{erlang,'get'}}},
		{'get-keys',{{erlang,'get_keys'}}},
		{'group-leader',{{erlang,'group_leader'}}},
		{'halt',{{erlang,'halt'}}},
		{'hd',{{erlang,'hd'}}},
		{'integer-to-list',{{erlang,'integer_to_list'}}},
		{'iolist-to-binary',{{erlang,'iolist_to_binary'}}},
		{'iolist-size',{{erlang,'iolist_size'}}},
		{'is-alive',{{erlang,'is_alive'}}},
		{'is-atom',{{erlang,'is_atom'}}},
		{'is-binary',{{erlang,'is_binary'}}},
		{'is-bitstring',{{erlang,'is_bitstring'}}},
		{'is-boolean',{{erlang,'is_boolean'}}},
		{'is-float',{{erlang,'is_float'}}},
		{'is-function',{{erlang,'is_function'}}},
		{'is-integer',{{erlang,'is_integer'}}},
		{'is-list',{{erlang,'is_list'}}},
		{'is-number',{{erlang,'is_number'}}},
		{'is-pid',{{erlang,'is_pid'}}},
		{'is-port',{{erlang,'is_port'}}},
		{'is-process-alive',{{erlang,'is_process_alive'}}},
		{'is-record',{{erlang,'is_record'}}},
		{'is-reference',{{erlang,'is_reference'}}},
		{'is-tuple',{{erlang,'is_tuple'}}},
		{'length',{{erlang,'length'}}},
		{'link',{{erlang,'link'}}},
		{'list-to-atom',{{erlang,'list_to_atom'}}},
		{'list-to-bitstring',{{erlang,'list_to_bitstring'}}},
		{'list-to-existing-atom',{{erlang,'list_to_existing_atom'}}},
		{'list-to-float',{{erlang,'list_to_float'}}},
		{'list-to-integer',{{erlang,'list_to_integer'}}},
		{'list-to-pid',{{erlang,'list_to_pid'}}},
		{'list-to-tuple',{{erlang,'list_to_tuple'}}},
		{'load-module',{{erlang,'load_module'}}},
		{'make-ref',{{erlang,'make_ref'}}},
		{'module-loaded',{{erlang,'module_loaded'}}},
		{'monitor-node',{{erlang,'monitor_node'}}},
		{'node',{{erlang,'node'}}},
		{'nodes',{{erlang,'nodes'}}},
		{'now',{{erlang,'now'}}},
		{'open-port',{{erlang,'open_port'}}},
		{'pid-to-list',{{erlang,'pid_to_list'}}},
		{'port-close',{{erlang,'port_close'}}},
		{'port-command',{{erlang,'port_command'}}},
		{'port-connect',{{erlang,'port_connect'}}},
		{'port-control',{{erlang,'port_control'}}},
		{'pre-loaded',{{erlang,'pre_loaded'}}},
		{'process-flag',{{erlang,'process_flag'}}},
		{'process-info',{{erlang,'process_info'}}},
		{'processes',{{erlang,'processes'}}},
		{'purge-module',{{erlang,'purge_module'}}},
		{'put',{{erlang,'put'}}},
		{'register',{{erlang,'register'}}},
		{'registered',{{erlang,'registered'}}},
		{'round',{{erlang,'round'}}},
		{'self',{{erlang,'self'}}},
		{'setelement',{{erlang,'setelement'}}},
		{'size',{{erlang,'size'}}},
		{'spawn',{{erlang,'spawn'}}},
		{'spawn-link',{{erlang,'spawn_link'}}},
		{'spawn-monitor',{{erlang,'spawn_monitor'}}},
		{'spawn-opt',{{erlang,'spawn_opt'}}},
		{'split-binary',{{erlang,'split_binary'}}},
		{'statistics',{{erlang,'statistics'}}},
		{'term-to-binary',{{erlang,'term_to_binary'}}},
		{'throw',{{erlang,'throw'}}},
		{'time',{{erlang,'time'}}},
		{'tl',{{erlang,'tl'}}},
		{'trunc',{{erlang,'trunc'}}},
		{'tuple-size',{{erlang,'tuple_size'}}},
		{'tuple-to-list',{{erlang,'tuple_to_list'}}},
		{'unlink',{{erlang,'unlink'}}},
		{'unregister',{{erlang,'unregister'}}},
		{'whereis',{{erlang,'whereis'}}}
		
	       ]}
	     ]}]).

